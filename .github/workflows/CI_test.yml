name: ccg_gwb CI targets

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release: 
    types:
      - published
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and package
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -r requirements_dev.txt
        python -m pip install -e .
    - name: Display Python, pip, setuptools, and all installed versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -m pip freeze
    - name: Run Lint
      run: make lint
    - name: Test with pytest
      run: make test
    - name: Codecov
      uses: codecov/codecov-action@v3
      #with:
      #  fail_ci_if_error: true


  build:
    needs: [tests]
    name: Build source distribution
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    - name: Build
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install -r requirements_dev.txt
        make dist
    - name: Test Deployability
      run: |
        pip install twine
        twine check dist/*
    - name: Test the sdist
      run: |
        mkdir tmp
        cd tmp
        python -m venv venv-wheel
        venv-wheel/bin/python -m pip install --upgrade pip setuptools
        venv-wheel/bin/python -m pip install ../dist/ccg_gwb*.whl
        venv-wheel/bin/python -c "import ccg_gwb; print(ccg_gwb.__version__)"
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*


  deploy:
    needs: [tests, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Download wheel/dist from build
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run:
        twine upload dist/*
